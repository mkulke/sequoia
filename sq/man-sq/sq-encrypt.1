.ie \n(.g .ds Aq \(aq
.el .ds Aq '
.TH encrypt 1 "July 2022" "sq 0.26.0" "Sequoia Manual"
.SH NAME
encrypt \- Encrypts a message
.SH SYNOPSIS
\fBencrypt\fR [\fB\-o\fR|\fB\-\-output\fR] [\fB\-B\fR|\fB\-\-binary\fR] [\fB\-\-recipient\-cert\fR] [\fB\-\-signer\-key\fR] [\fB\-\-private\-key\-store\fR] [\fB\-s\fR|\fB\-\-symmetric\fR] [\fB\-\-mode\fR] [\fB\-\-compression\fR] [\fB\-t\fR|\fB\-\-time\fR] [\fB\-\-use\-expired\-subkey\fR] [\fB\-h\fR|\fB\-\-help\fR] [\fIFILE\fR] 
.SH DESCRIPTION
Encrypts a message
.PP
Encrypts a message for any number of recipients and with any number of
passwords, optionally signing the message in the process.
.PP
The converse operation is "sq decrypt".
.SH OPTIONS
.TP
\fB\-o\fR, \fB\-\-output\fR=\fIFILE\fR
Writes to FILE or stdout if omitted
.TP
\fB\-B\fR, \fB\-\-binary\fR
Emits binary data
.TP
\fB\-\-recipient\-cert\fR=\fICERT\-RING\fR
Encrypts for all recipients in CERT\-RING
.TP
\fB\-\-signer\-key\fR=\fIKEY\fR
Signs the message with KEY
.TP
\fB\-\-private\-key\-store\fR=\fIKEY_STORE\fR
Provides parameters for private key store
.TP
\fB\-s\fR, \fB\-\-symmetric\fR
Adds a password to encrypt with.  The message can be decrypted with either one of the recipient\*(Aqs keys, or any password.
.TP
\fB\-\-mode\fR=\fIMODE\fR [default: all] [possible values: transport, rest, all]
Selects what kind of keys are considered for encryption.  Transport select subkeys marked as suitable for transport encryption, rest selects those for encrypting data at rest, and all selects all encryption\-capable subkeys.
.TP
\fB\-\-compression\fR=\fIKIND\fR [default: pad] [possible values: none, pad, zip, zlib, bzip2]
Selects compression scheme to use
.TP
\fB\-t\fR, \fB\-\-time\fR=\fITIME\fR
Chooses keys valid at the specified time and sets the signature\*(Aqs creation time
.TP
\fB\-\-use\-expired\-subkey\fR
If a certificate has only expired encryption\-capable subkeys, falls back to using the one that expired last
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help information
.TP
[\fIFILE\fR]
Reads from FILE or stdin if omitted
.SH EXAMPLES
 Encrypt a file using a certificate
.PP
.nf
.RS
 sq encrypt \-\-recipient\-cert romeo.pgp message.txt
.RE
.fi
.PP
 Encrypt a file creating a signature in the process
.PP
.nf
.RS
 sq encrypt \-\-recipient\-cert romeo.pgp \-\-signer\-key juliet.pgp message.txt
.RE
.fi
.PP
 Encrypt a file using a password
.PP
.nf
.RS
 sq encrypt \-\-symmetric message.txt
.RE
.fi
.SH "SEE ALSO"
For the full documentation see <https://docs.sequoia\-pgp.org/sq/>.
.PP
sq(1)
sq\-armor(1)
sq\-certify(1)
sq\-dearmor(1)
sq\-decrypt(1)
sq\-inspect(1)
sq\-key(1)
sq\-keyring(1)
sq\-keyserver(1)
sq\-packet(1)
sq\-revoke(1)
sq\-sign(1)
sq\-verify(1)
sq\-wkd(1)
