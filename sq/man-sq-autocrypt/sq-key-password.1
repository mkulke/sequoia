.ie \n(.g .ds Aq \(aq
.el .ds Aq '
.TH password 1 "July 2022" "sq 0.26.0" "Sequoia Manual"
.SH NAME
password \- Changes password protecting secrets
.SH SYNOPSIS
\fBpassword\fR [\fB\-o\fR|\fB\-\-output\fR] [\fB\-\-clear\fR] [\fB\-B\fR|\fB\-\-binary\fR] [\fB\-h\fR|\fB\-\-help\fR] [\fIFILE\fR] 
.SH DESCRIPTION
Changes password protecting secrets
.PP
Secret key material in keys can be protected by a password.  This
subcommand changes or clears this encryption password.
.PP
To emit the key with unencrypted secrets, either use `\-\-clear` or
supply a zero\-length password when prompted for the new password.
.SH OPTIONS
.TP
\fB\-o\fR, \fB\-\-output\fR=\fIFILE\fR
Writes to FILE or stdout if omitted
.TP
\fB\-\-clear\fR
Emit a key with unencrypted secrets
.TP
\fB\-B\fR, \fB\-\-binary\fR
Emits binary data
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help information
.TP
[\fIFILE\fR]
Reads from FILE or stdin if omitted
.SH EXAMPLES
 First, generate a key
.PP
.nf
.RS
 sq key generate \-\-userid "<juliet@example.org>" \-\-export juliet.key.pgp
.RE
.fi
.PP
 Then, encrypt the secrets in the key with a password.
.PP
.nf
.RS
 sq key password < juliet.key.pgp > juliet.encrypted_key.pgp
.RE
.fi
.PP
 And remove the password again.
.PP
.nf
.RS
 sq key password \-\-clear < juliet.encrypted_key.pgp > juliet.decrypted_key.pgp
.RE
.fi
.SH "SEE ALSO"
For the full documentation see <https://docs.sequoia\-pgp.org/sq/>.
.PP
sq(1)
sq\-armor(1)
sq\-autocrypt(1)
sq\-certify(1)
sq\-dearmor(1)
sq\-decrypt(1)
sq\-encrypt(1)
sq\-inspect(1)
sq\-key(1)
sq\-key\-adopt(1)
sq\-key\-attest\-certifications(1)
sq\-key\-extract\-cert(1)
sq\-key\-generate(1)
sq\-key\-userid(1)
sq\-keyring(1)
sq\-keyserver(1)
sq\-packet(1)
sq\-revoke(1)
sq\-sign(1)
sq\-verify(1)
sq\-wkd(1)
